function index = faceRecognition(InputImage, m, A, Eigenfaces)

ProjectedImages = [];
NumberImages = size(Eigenfaces,2);

% Extracting the PCA features from test image
tempImage = InputImage(:,:,1);

[w h] = size(tempImage);
[w2 h2] = size(m);

if(w ~= w2 & h ~= h2)
   index = 0;
   return;
end

Diff2Mean = double(tempImage) - m; %Subtracting the mean
newWeight = transpose(Eigenfaces)*Diff2Mean;

%% Take out the top three min dist and compare (fisherface, light version)
theMins = sum(sqrt((A-newWeight).^2));
theMinsSort = sort(theMins);
one = theMinsSort(1);
id1 = find(theMins == one); id1 = mod(id1, 16);
two = theMinsSort(2);
id2 = find(theMins == two); id2 = mod(id2, 16);
three = theMinsSort(3);
id3 = find(theMins == three); id3 = mod(id3, 16);
four = theMinsSort(4);
id4 = find(theMins == four); id4 = mod(id4, 16);

if(id1 ~= 1 

if(id1 == 0)
    id1 = 16;
end
if(id2 == 0)
    id2 = 16;
end
if(id3 == 0)
    id3 = 16;
end
if(id4 == 0)
    id4 = 16;
end

a = id1
b = id2
c = id3
d = id4

IDarray = [id1, id2, id3, id4];
occurences = 0;
minDiff = 0;

if((id1 ~= id2 & id1 ~= id3 & id1 ~= id4 & id2 ~= id3 & id2 ~= id4 & id3 ~= id4) | (one < 10^3))
    [minDiff, index] = min(sum(sqrt((A-newWeight).^2))); % Find image with minimum euclidian distance
else %Some ids match, uncertainty around correct ID, check the most like person
    index = mode(IDarray);
    for(i = 1:4)
        if(i == 1)
            minDiff = theMinsSort(1);
        end
        if(IDarray(i) == index)
            occurences = occurences + 1;
            minDiff = minDiff + theMinsSort(i)
        end
    end
%    minDiff = theMins(index);
end

%[minDiff, index] = min(sum(sqrt((A-newWeight).^2))); % Find image with minimum euclidian distance

fprintf('Euclidian distance:');
disp(index);
disp(minDiff);

if (minDiff > 5.1 * 10^8) % Setting threshold 
       index = 0;
       return;
 end
    


